import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./apollo";
class Query {
    apollo;
    document;
    client = 'default';
    constructor(apollo) {
        this.apollo = apollo;
    }
    watch(variables, options) {
        return this.apollo.use(this.client).watchQuery({
            ...options,
            variables,
            query: this.document,
        });
    }
    fetch(variables, options) {
        return this.apollo.use(this.client).query({
            ...options,
            variables,
            query: this.document,
        });
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: Query, deps: [{ token: i1.Apollo }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: Query });
}
export { Query };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: Query, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Apollo }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBTTNDLE1BQ2EsS0FBSztJQUlNO0lBSE4sUUFBUSxDQUF5QztJQUMxRCxNQUFNLEdBQUcsU0FBUyxDQUFDO0lBRTFCLFlBQXNCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUcsQ0FBQztJQUVqQyxLQUFLLENBQUMsU0FBYSxFQUFFLE9BQXNDO1FBQ2hFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBTztZQUNuRCxHQUFHLE9BQU87WUFDVixTQUFTO1lBQ1QsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQ3JCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxLQUFLLENBQUMsU0FBYSxFQUFFLE9BQWlDO1FBQzNELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBTztZQUM5QyxHQUFHLE9BQU87WUFDVixTQUFTO1lBQ1QsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQ3JCLENBQUMsQ0FBQztJQUNMLENBQUM7dUdBcEJVLEtBQUs7MkdBQUwsS0FBSzs7U0FBTCxLQUFLOzJGQUFMLEtBQUs7a0JBRGpCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERvY3VtZW50Tm9kZSB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHR5cGUgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7IEFwb2xsb1F1ZXJ5UmVzdWx0LCBPcGVyYXRpb25WYXJpYWJsZXMsIFR5cGVkRG9jdW1lbnROb2RlIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvY29yZSc7XG5pbXBvcnQgeyBBcG9sbG8gfSBmcm9tICcuL2Fwb2xsbyc7XG5pbXBvcnQgeyBRdWVyeVJlZiB9IGZyb20gJy4vcXVlcnktcmVmJztcbmltcG9ydCB7IEVtcHR5T2JqZWN0LCBRdWVyeU9wdGlvbnNBbG9uZSwgV2F0Y2hRdWVyeU9wdGlvbnNBbG9uZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUXVlcnk8VCA9IHt9LCBWIGV4dGVuZHMgT3BlcmF0aW9uVmFyaWFibGVzID0gRW1wdHlPYmplY3Q+IHtcbiAgcHVibGljIHJlYWRvbmx5IGRvY3VtZW50OiBEb2N1bWVudE5vZGUgfCBUeXBlZERvY3VtZW50Tm9kZTxULCBWPjtcbiAgcHVibGljIGNsaWVudCA9ICdkZWZhdWx0JztcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYXBvbGxvOiBBcG9sbG8pIHt9XG5cbiAgcHVibGljIHdhdGNoKHZhcmlhYmxlcz86IFYsIG9wdGlvbnM/OiBXYXRjaFF1ZXJ5T3B0aW9uc0Fsb25lPFYsIFQ+KTogUXVlcnlSZWY8VCwgVj4ge1xuICAgIHJldHVybiB0aGlzLmFwb2xsby51c2UodGhpcy5jbGllbnQpLndhdGNoUXVlcnk8VCwgVj4oe1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHZhcmlhYmxlcyxcbiAgICAgIHF1ZXJ5OiB0aGlzLmRvY3VtZW50LFxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGZldGNoKHZhcmlhYmxlcz86IFYsIG9wdGlvbnM/OiBRdWVyeU9wdGlvbnNBbG9uZTxWLCBUPik6IE9ic2VydmFibGU8QXBvbGxvUXVlcnlSZXN1bHQ8VD4+IHtcbiAgICByZXR1cm4gdGhpcy5hcG9sbG8udXNlKHRoaXMuY2xpZW50KS5xdWVyeTxULCBWPih7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdmFyaWFibGVzLFxuICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==